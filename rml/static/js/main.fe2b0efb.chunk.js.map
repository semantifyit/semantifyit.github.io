{"version":3,"sources":["rmlmapper.ts","App.tsx","util.ts","serviceWorker.ts","index.tsx"],"names":["yarrrmlParse","yaml","Promise","resolve","y2r","yarrrmlParser","yamlQuads","convert","prefixes","rr","rml","xsd","schema","rdf","rdfs","fnml","fno","mex","Object","assign","getPrefixes","writer","N3","addQuads","end","_","result","runRmlMapping","_ref","D_Programming_Git_rml_editor_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","D_Programming_Git_rml_editor_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","mappingFile","inputFile","options","wrap","_context","prev","next","abrupt","rmlMapperNode","input","stop","_x","_x2","_x3","apply","this","arguments","yarrrmlExtend","yarrrml","str","replace","_len","length","e","Array","_key","_ref2","_ref3","D_Programming_Git_rml_editor_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","cg1","cg2","cg3","split","map","el","i","concat","trim","join","escapeTable","(",")","{","}","yarrrmlEncodeBrackets","level","ret","c","Error","yarrrmlPlusToRml","_ref6","_callee2","mappingStr","_context2","sent","entries","reduce","_ref4","_ref5","char","code","RegExp","_x4","initialMapping","initialInput","initialFunctions","window","onbeforeunload","App","_useState","useState","_useState2","D_Programming_Git_rml_editor_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","mapping","setMapping","_useState3","_useState4","setInput","_useState5","_useState6","functions","setFunctions","_useState7","_useState8","output","setOutput","_useState9","_useState10","inputType","setInputType","_useState11","_useState12","outputType","setOutputType","_useState13","_useState14","rmlType","setRmlType","_useState15","_useState16","runOnChange","setRunOnChange","_useState17","_useState18","showFunctions","setShowFunctions","downloadRmlStr","runMapping","D_Programming_Git_rml_editor_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_Programming_Git_rml_editor_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_callee$","toRDF","removeNameSpace","xmlns","compress","@vocab","eval","JSON","stringify","t0","console","log","toString","saveRML","downloadString","click","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","className","onClick","react_ace__WEBPACK_IMPORTED_MODULE_4___default","fontSize","mode","theme","value","onChange","name","editorProps","$blockScrolling","showPrintMargin","width","style","gridColumn","readOnly","target","type","checked","__webpack_require__","d","__webpack_exports__","text","fileType","fileName","blob","Blob","document","download","href","URL","createObjectURL","dataset","downloadurl","display","body","appendChild","removeChild","setTimeout","revokeObjectURL","Boolean","location","hostname","match","ReactDOM","render","react_default","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fe2b0efb.chunk.js","sourcesContent":["import * as N3 from 'n3';\nimport * as yarrrmlParser from '@rmlio/yarrrml-parser/lib/rml-generator';\nimport * as rmlMapperNode from 'rocketrml';\n\nexport const yarrrmlParse = (yaml: string): Promise<string> =>\n  new Promise((resolve) => {\n    const y2r = new yarrrmlParser();\n    const yamlQuads = y2r.convert(yaml);\n    let prefixes = {\n      rr: 'http://www.w3.org/ns/r2rml#',\n      rml: 'http://semweb.mmlab.be/ns/rml#',\n      xsd: 'http://www.w3.org/2001/XMLSchema#',\n      schema: 'http://schema.org/',\n      rdf: 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n      rdfs: 'http://www.w3.org/2000/01/rdf-schema#',\n      fnml: 'http://semweb.mmlab.be/ns/fnml#',\n      fno: 'http://w3id.org/function/ontology#',\n      mex: 'http://mapping.example.com/',\n    };\n    prefixes = Object.assign({}, prefixes, y2r.getPrefixes());\n\n    const writer = new N3.Writer({ prefixes });\n    writer.addQuads(yamlQuads);\n    writer.end((_: any, result: any) => {\n      resolve(result);\n    });\n  });\n\nexport const runRmlMapping = async (\n  mappingFile: string,\n  inputFile: string,\n  options: any,\n) => {\n  return rmlMapperNode.parseFileLive(\n    mappingFile,\n    { input: inputFile },\n    options,\n  );\n};\n\n//  - [ex:name, {mapping: thumbnail, join: [asd, asd]}]\n// -->\n//  - [ex:name,  {mapping:geo, condition:{function:equal,parameters:[[str1,$(firstname)],[str2,$(firstname)]]}}]\n\n// - [schema:geo, {function: myfunc:toUpperCase, parameters: [$(title), $(foo)]}]\n// -->\n// - [schema:geo, {function: myfunc:toUpperCase, parameters: [[ex:str1, $(title)], [ex:str2, $(foo)]]}]\n\nexport const yarrrmlExtend = (yarrrml: string): string => {\n  // replace function\n  let str = yarrrml.replace(\n    /((?:parameters|pms): *\\[)([\\w@\\^\\.\\/\\$\\(\\)\\\"\\' ,\\[\\]\\|\\=]+)(\\])/g,\n    (...e) => {\n      const [, cg1, cg2, cg3] = e as [string, string, string, string];\n      const params = cg2\n        .split(',')\n        .map((el, i) => `[schema:str${i}, ${el.trim()}]`)\n        .join(', ');\n      return cg1 + params + cg3;\n    },\n  );\n  // replace join\n  str = str.replace(\n    /join: *\\[ *\"?([\\w@\\^\\.\\/\\$\\:\\-\\*\\,\\ \\'\\)\\()]+)\"? *, *\"?([\\w@\\^\\.\\/\\$\\:\\-\\*\\,\\ \\'\\(\\)]+)\"? *\\]/g,\n    'condition:{function:equal,parameters:[[str1,\"$($1)\"],[str2,\"$($2)\"]]}',\n  );\n  return str;\n};\n\n// name$LBR.$RBR -> name(.)\nconst escapeTable = {\n  '(': '\\\\$LBR',\n  ')': '\\\\$RBR',\n  '{': '\\\\$LCB',\n  '}': '\\\\$RCB',\n};\n\nconst yarrrmlEncodeBrackets = (str: string) => {\n  let level = 0;\n  let ret = '';\n\n  for (let i = 0; i < str.length; i += 1) {\n    const c = str[i];\n\n    if (level < 0) {\n      throw new Error('failed parsing brackets');\n    }\n\n    if (level === 0) {\n      switch (c) {\n        case '$':\n          if (str[i + 1] === '(') {\n            level += 1;\n            i += 1;\n            ret += '$(';\n          } else {\n            ret += c;\n          }\n          break;\n        case '(':\n        case ')':\n        default:\n          ret += c;\n      }\n    } else {\n      switch (c) {\n        case '(':\n          level += 1;\n          ret += '$LBR';\n          break;\n        case ')':\n          level -= 1;\n          if (level === 0) {\n            ret += ')';\n          } else {\n            ret += '$RBR';\n          }\n          break;\n        default:\n          ret += c;\n      }\n    }\n  }\n  return ret;\n};\n\n// console.log(yarrrmlEncodeBrackets('asd$(fii) fds $(fs(name(), conc(foo, my, \"fellow\"))g) why'));\n\nexport const decodeRMLReplacements = (rml: string) =>\n  Object.entries(escapeTable).reduce(\n    (str, [char, code]) => str.replace(new RegExp(code, 'g'), char),\n    rml,\n  );\n\nexport const yarrrmlPlusToRml = async (yarrrml: string): Promise<string> => {\n  let mappingStr = yarrrmlExtend(yarrrml);\n  mappingStr = yarrrmlEncodeBrackets(mappingStr);\n  mappingStr = await yarrrmlParse(mappingStr);\n  mappingStr = decodeRMLReplacements(mappingStr);\n  return mappingStr;\n};\n","import React, { useState } from 'react';\nimport brace from 'brace';\nimport AceEditor from 'react-ace';\n\nimport 'brace/ext/searchbox';\nimport 'brace/mode/yaml';\nimport 'brace/mode/turtle';\nimport 'brace/mode/xml';\nimport 'brace/mode/json';\nimport 'brace/mode/javascript';\n\nimport 'brace/theme/dracula';\n\nimport './App.css';\n\nimport { runRmlMapping, yarrrmlPlusToRml } from './rmlmapper';\nimport { downloadString } from './util';\n\nconst initialMapping = `prefixes:\n  schema: \"http://schema.org/\"\n  myfunc: \"http://myfunc.com/\"\nmappings:\n  person:\n    sources:\n      - ['input~jsonpath', '$.persons[*]']\n    s: http://example.com/$(firstname)\n    po:\n      - [a, schema:Person]\n      - [schema:name, $(firstname)]\n      - [schema:language, $(speaks.*)]\n`;\n\nconst initialInput = `{\n  \"persons\": [\n      {\n          \"firstname\": \"John\",\n          \"lastname\": \"Doe\",\n          \"speaks\": [\n              \"de\",\n              \"en\"\n          ]\n      },\n      {\n          \"firstname\": \"Jane\",\n          \"lastname\": \"Smith\",\n          \"speaks\": [\n              \"fr\",\n              \"es\"\n          ]\n      }\n  ]\n}`;\nconst initialFunctions = \n`(() => {\n  // define your function namespace here:\n  const namespace = 'http://myfunc.com/';\n  \n  // your functions: (input is an array)\n  const toUpperCase = ([str]) => {\n    return str.toString().toUpperCase();\n  };\n  \n\n  // array of all functions you want to export\n  const functionToExport = [toUpperCase];\n\n  return functionToExport.reduce((acc, cur) => {acc[namespace + cur.name] = cur; return acc;}, {});\n})();\n`;\n\nwindow.onbeforeunload = function() {\n  return true;\n};\n\nconst App = () => {\n  const [mapping, setMapping] = useState(initialMapping);\n  const [input, setInput] = useState(initialInput);\n  const [functions, setFunctions] = useState(initialFunctions);\n  const [output, setOutput] = useState('');\n  const [inputType, setInputType] = useState('json');\n  const [outputType, setOutputType] = useState('json');\n  const [rmlType, setRmlType] = useState('yaml');\n  const [runOnChange, setRunOnChange] = useState(false);\n  const [showFunctions, setShowFunctions] = useState(false);\n\n  let downloadRmlStr = '';\n\n  const runMapping = async () => {\n    try {\n      let mappingStr = mapping;\n\n      if (rmlType === 'yaml') {\n        mappingStr = await yarrrmlPlusToRml(mappingStr);\n      }\n      downloadRmlStr = mappingStr;\n      const result = await runRmlMapping(mappingStr,\n        input,\n        {\n          toRDF: (outputType==='turtle'),\n          removeNameSpace:{xmlns:\"http://interface.deskline.net/DSI/XSD\"},\n          replace: true,\n          compress: { \n           '@vocab':\"http://schema.org/\"\n          },\n          functions: eval(functions),\n        });        \n      setOutput(outputType==='turtle' ? result : JSON.stringify(result, null, 2));\n    } catch (e) {\n      console.log(e);\n      setOutput(e.toString());\n    }\n  }\n\n  const saveRML = () => {\n    downloadString(downloadRmlStr, 'ttl', 'mapping_rml.ttl');\n  }\n\n  if(runOnChange){\n    runMapping();\n  }\n\n  const click = () =>\n    runMapping();\n\n  return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Welcome to RMHell!!</h1>\n\n          <button className=\"button\" onClick={click}>RUN</button>\n\n          <div className=\"grid\">\n            <div className=\"width-auto\">\n            <h3>Yarrml / RML-ttl</h3>\n              <AceEditor\n                fontSize={14}\n                mode={rmlType}\n                theme=\"dracula\"\n                value={mapping}\n                onChange={(e) => setMapping(e)}\n                name=\"yarrrml\"\n                editorProps={{$blockScrolling: true}}\n                showPrintMargin={false}\n                width=\"auto\"\n              />\n            </div>\n            {showFunctions && (\n              <div className=\"width-auto\">\n              <h3>JS Functions</h3>\n                <AceEditor\n                  fontSize={14}\n                  mode=\"javascript\"\n                  theme=\"dracula\"\n                  value={functions}\n                  onChange={(e) => setFunctions(e)}\n                  name=\"functions\"\n                  editorProps={{$blockScrolling: true}}\n                  showPrintMargin={false}\n                  width=\"auto\"\n                />\n              </div>\n            )}\n            <div className=\"width-auto\">\n              <h3>Input({`.${inputType}`})</h3>\n              <AceEditor\n                fontSize={14}\n                mode={inputType}\n                theme=\"dracula\"\n                value={input}\n                onChange={(e) => setInput(e)}\n                name=\"input\"\n                width=\"auto\"\n                editorProps={{$blockScrolling: true}}\n                showPrintMargin={false}\n              />\n            </div>\n            <div className=\"width-auto\" style={!showFunctions ? {gridColumn: \"1 / 3\"}: {}}>\n              <h3>Output</h3>\n              <AceEditor\n                fontSize={14}\n                mode={outputType}\n                theme=\"dracula\"\n                value={output}\n                name=\"output\"\n                editorProps={{$blockScrolling: true}}\n                width=\"auto\"\n                readOnly={true}\n                showPrintMargin={false}\n              />\n            </div>\n            <div className=\"width-auto\" style={{gridColumn: \"1 / 3\"}}>\n              <h3>Settings</h3>\n              <span className=\"marginRight\">\n                RML type:\n                <select value={rmlType} onChange={(e) => setRmlType(e.target.value)}>\n                  <option value=\"yaml\">Yarrrml</option>\n                  <option value=\"turtle\">RML-turtle</option>\n                </select>\n              </span>\n              <span className=\"marginRight\">\n                Input type:\n                <select value={inputType} onChange={(e) => setInputType(e.target.value)}>\n                  <option value=\"json\">JSON</option>\n                  <option value=\"xml\">XML</option>\n                </select>\n              </span>\n              <span className=\"marginRight\">\n                Output type:\n                <select value={outputType} onChange={(e) => setOutputType(e.target.value)}>\n                  <option value=\"json\">JSON-LD</option>\n                  <option value=\"turtle\">N-Tripples</option>\n                </select>\n              </span>\n              <span className=\"marginRight\">\n                <input type=\"checkbox\" name=\"runMapperOnChange\" checked={showFunctions} onChange={(e) => setShowFunctions(!showFunctions)}/> Show functions\n              </span>\n              <input type=\"checkbox\" name=\"runMapperOnChange\" checked={runOnChange} onChange={(e) => setRunOnChange(!runOnChange)}/> Run mapper on change\n              <br/>\n              <button className=\"button small\" onClick={saveRML}>Download RML</button>\n            </div>\n          </div>\n          <div className=\"footer\"/>\n        </header>\n      </div>\n    );\n}\n\nexport default App;\n","\nexport const downloadString = (text: string, fileType: string, fileName: string) => {\n    const blob = new Blob([text], { type: fileType });\n  \n    const a = document.createElement('a');\n    a.download = fileName;\n    a.href = URL.createObjectURL(blob);\n    a.dataset.downloadurl = [fileType, a.download, a.href].join(':');\n    a.style.display = \"none\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}